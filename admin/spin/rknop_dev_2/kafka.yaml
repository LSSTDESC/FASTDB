---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: fastdb-rknop-dev-2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-fastdb-rknop-dev-2-kafka
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[]]'
        nersc.gov/collab_uids: "99885"
        nersc.gov/gid: "95089"
        nersc.gov/gids: 60152,57177,95089,96414,99885
        nersc.gov/rules: user
        nersc.gov/uid: "95089"
        nersc.gov/username: raknop
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-fastdb-rknop-dev-2-kafka
    spec:
      affinity: {}
      containers:
      - name: kafka
        image: apache/kafka:4.0.0
        env:
        # cf: https://github.com/apache/kafka/blob/trunk/docker/examples/docker-compose-files/single-node/plaintext/docker-compose.yml
        # Generate a new CLUSTER_ID with: uuid -v4 | tr -d '-' | base64 | cut -b 1-22
        - name: CLUSTER_ID
          value: ZWYwMWI3MzQ0MzkyNDE1N2
        - name: KAFKA_NODE_ID
          value: "1"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
        - name: KAFKA_ADVERTISED_LISTENERS
          value: 'PLAINTEXT://kafka:9092'
        - name: KAFKA_PROCESS_ROLES
          value: 'broker,controller'
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: '1@kafka:9093'
        - name: KAFKA_LISTENERS
          value: 'CONTROLLER://:9093,PLAINTEXT://:9092'
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: 'PLAINTEXT'
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: 'CONTROLLER'
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_SHARE_COORDINATOR_STATE_TOPIC_MIN_ISR
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: '/tmp/kraft-combined-logs'
        imagePullPolicy: Always
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /var/lib/kafka/data
          name: kafka-data
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: fastdb-rknop-dev-2-kafka-data-20250711
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: fastdb-rknop-dev-2
spec:
  clusterIP: None
  clusterIPs:
  - None
  ports:
  - name: default
    port: 42
    protocol: TCP
    targetPort: 42
  selector:
    workload.user.cattle.io/workloadselector: deployment-fastdb-rknop-dev-2-kafka
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
